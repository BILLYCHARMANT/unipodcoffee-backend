// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  SUPERADMIN
  ADMIN
  MANAGER
  STOCK_MANAGER
}

model User {
  id         String   @id @default(uuid()) @unique
  firstName  String
  lastName   String
  role       Role
  gender     String
  phoneNumber String  @unique
  email      String   @unique
  password   String
  status    Boolean  @default(true)
}

model Item {
  id         String    @id @default(uuid()) @unique
  name       String
  unitPrice  Float
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String
  supplier   Supplier  @relation(fields: [supplierId], references: [id])
  supplierId String
  stock      Stock?
  stockIn    StockIn[]
  stockOut   StockOut[]
}

model Category {
  id       String    @id @default(uuid()) @unique
  name     String
  unit     String
  items    Item[]
}

model Supplier {
  id    String     @id @default(uuid()) @unique
  name  String
  items Item[]
}

model Stock {
  id                 String   @id @default(uuid()) @unique
  location           String
  item               Item     @relation(fields: [itemId], references: [id])
  itemId             String   @unique
  quantityInStock    Int
  quantityOutStock   Int
  balanceInStock     Int
  totalValueReceived Float
  totalBalance       Float
}

model StockIn {
  id           String    @id @default(uuid()) @unique
  receiveDate  DateTime
  quarter      String
  item         Item      @relation(fields: [itemId], references: [id])
  itemId       String
  quantity     Int
  totalPrice   Float
  specification String
}

model StockOut {
  id            String    @id @default(uuid()) @unique
  requestDate   DateTime
  quarter       String
  item          Item      @relation(fields: [itemId], references: [id])
  itemId        String
  requestPerson String
  requestReason String
  quantity      Int
  totalPrice    Float
  specification String
}
